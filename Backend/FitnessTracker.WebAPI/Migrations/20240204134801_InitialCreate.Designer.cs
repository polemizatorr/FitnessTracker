// <auto-generated />
using System;
using FitnessTracker.WebAPI.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitnessTracker.WebAPI.Migrations
{
    [DbContext(typeof(TrainingsContext))]
    [Migration("20240204134801_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FitnessTracker.WebAPI.Entities.Models.AerobicTraining", b =>
                {
                    b.Property<Guid>("AerobicTrainingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("ActivityDuration")
                        .HasColumnType("time");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CalorieBurnt")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AerobicTrainingId");

                    b.ToTable("AerobicTrainings");
                });

            modelBuilder.Entity("FitnessTracker.WebAPI.Entities.Models.Exercise", b =>
                {
                    b.Property<Guid>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExaushtionLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("SetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StrenghtTrainingId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ExerciseId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("FitnessTracker.WebAPI.Entities.Models.Set", b =>
                {
                    b.Property<Guid>("SetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExerciseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RepetitionsNumber")
                        .HasColumnType("int");

                    b.HasKey("SetId");

                    b.ToTable("Sets");
                });

            modelBuilder.Entity("FitnessTracker.WebAPI.Entities.Models.StrenghtTraining", b =>
                {
                    b.Property<Guid>("StrenghtTrainingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExerciseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StrenghtTrainingId");

                    b.ToTable("StrenghtTrainings");
                });

            modelBuilder.Entity("FitnessTracker.WebAPI.Entities.Models.TrainingToExercise", b =>
                {
                    b.Property<Guid>("ExerciseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StrenghtTrainingId")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable("TrainingsToExercises");
                });

            modelBuilder.Entity("FitnessTracker.WebAPI.Entities.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("cabe6989-a29b-4ce6-88c7-d9f75536c809"),
                            BirthDate = new DateTime(2024, 2, 4, 14, 48, 1, 293, DateTimeKind.Local).AddTicks(5869),
                            CreationDate = new DateTime(2024, 2, 4, 14, 48, 1, 293, DateTimeKind.Local).AddTicks(5901),
                            Email = "Tukan@vp.pl",
                            FirstName = "Domin",
                            LastName = "Czerniak",
                            ModificationTime = new DateTime(2024, 2, 4, 14, 48, 1, 293, DateTimeKind.Local).AddTicks(5903),
                            Password = "passwd",
                            UserName = "Tukan"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
