// <auto-generated />
using System;
using FitnessTracker.WebAPI.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitnessTracker.WebAPI.Migrations
{
    [DbContext(typeof(TrainingsContext))]
    [Migration("20240701092208_add datetime to aerobicTraining")]
    partial class adddatetimetoaerobicTraining
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FitnessTracker.WebAPI.Entities.Models.AerobicTraining", b =>
                {
                    b.Property<Guid>("AerobicTrainingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ActivityDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ActivityDurationMinutes")
                        .HasColumnType("int");

                    b.Property<string>("ActivityType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CalorieBurnt")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AerobicTrainingId");

                    b.HasIndex("UserId");

                    b.ToTable("AerobicTrainings");
                });

            modelBuilder.Entity("FitnessTracker.WebAPI.Entities.Models.Set", b =>
                {
                    b.Property<Guid>("SetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExerciseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExhaustionLevel")
                        .HasColumnType("int");

                    b.Property<int>("RepetitionsNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("StrenghtTrainingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("SetId");

                    b.HasIndex("StrenghtTrainingId");

                    b.ToTable("Sets");
                });

            modelBuilder.Entity("FitnessTracker.WebAPI.Entities.Models.StrengthTraining", b =>
                {
                    b.Property<Guid>("StrenghtTrainingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TrainingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrainingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StrenghtTrainingId");

                    b.HasIndex("UserId");

                    b.ToTable("StrenghtTrainings");
                });

            modelBuilder.Entity("FitnessTracker.WebAPI.Entities.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FitnessTracker.WebAPI.Entities.Models.AerobicTraining", b =>
                {
                    b.HasOne("FitnessTracker.WebAPI.Entities.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitnessTracker.WebAPI.Entities.Models.Set", b =>
                {
                    b.HasOne("FitnessTracker.WebAPI.Entities.Models.StrengthTraining", "StrenghtTraining")
                        .WithMany("Sets")
                        .HasForeignKey("StrenghtTrainingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StrenghtTraining");
                });

            modelBuilder.Entity("FitnessTracker.WebAPI.Entities.Models.StrengthTraining", b =>
                {
                    b.HasOne("FitnessTracker.WebAPI.Entities.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FitnessTracker.WebAPI.Entities.Models.StrengthTraining", b =>
                {
                    b.Navigation("Sets");
                });
#pragma warning restore 612, 618
        }
    }
}
